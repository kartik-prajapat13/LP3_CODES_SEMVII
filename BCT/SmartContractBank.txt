// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// 0xABc0031d8e95c05dD8f0e99051fB1D93199a7C5B

contract SimpleBank {
    
    mapping(address => uint) private  balances;

  //  event Deposit(address indexed accountHolder, uint amount);

  //  event Withdraw(address indexed accountHolder, uint amount);

    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than zero");
        balances[msg.sender] += msg.value;

    //    emit Deposit(msg.sender, msg.value);
    }


    function withdraw(uint _amount) public {
        require(_amount > 0, "Withdraw amount must be greater than zero");
        require(balances[msg.sender] >= _amount, "Insufficient balance");

        balances[msg.sender] -= _amount;
        payable(msg.sender).transfer(_amount);

     //   emit Withdraw(msg.sender, _amount);
    }

    function checkBalance() public view returns (uint) {
        return balances[msg.sender];
    }
}